name: Generate and Commit Migrations

on:
  push:
    branches:
      - main  # 监听 main 分支的变更

jobs:
  generate-migrations:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # 使用适合项目的 Python 版本

    # 3. 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4. 生成迁移文件
    - name: Generate migrations
      run: |
        python manage.py makemigrations
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # 确保所有迁移文件都被追踪
        git add */migrations/*.py

    # 5. 检查是否有新迁移文件
    - name: Check for migrations
      id: check_migrations
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "::set-output name=has_changes::true"
          echo "has_changes=true" >> $GITHUB_ENV
        else
          echo "::set-output name=has_changes::false"
          echo "has_changes=false" >> $GITHUB_ENV
        fi

    # 6. 提交并推送迁移文件到 main-migrations 分支
    - name: Commit and push migrations
      if: env.has_changes == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch origin main-migrations || true
        git checkout -B main-migrations
        git add */migrations/*.py
        git commit -m "Auto-generated migrations [skip ci]"
        git push -f origin main-migrations
